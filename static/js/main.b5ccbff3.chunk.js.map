{"version":3,"sources":["components/Categories.js","components/NewsItem.js","components/NewsList.js","lib/usePromise.js","pages/NewsPage.js","App.js","index.js"],"names":["categories","name","text","CategoriesBlock","styled","div","Category","NavLink","Categories","map","c","key","activeClassName","exact","to","NewsItemBlock","NewsItem","article","title","description","url","urlToImage","className","href","target","rel","src","alt","NewsListBlock","NewsList","category","promiseCreator","deps","useState","loading","setLoading","resolved","setResolved","error","setError","useEffect","a","process","usePromise","query","axios","get","response","articles","data","NewsPage","match","params","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"u3BAIA,IAAMA,EAAa,CACjB,CACEC,KAAM,MACNC,KAAM,4BAER,CACED,KAAM,WACNC,KAAM,4BAER,CACED,KAAM,gBACNC,KAAM,wCAER,CACED,KAAM,SACNC,KAAM,gBAER,CACED,KAAM,UACNC,KAAM,gBAER,CACED,KAAM,SACNC,KAAM,sBAER,CACED,KAAM,aACNC,KAAM,iBAIJC,EAAkBC,IAAOC,IAAV,KAWfC,EAAWF,YAAOG,IAAPH,CAAH,KA4CCI,EAlBI,WACjB,OACE,kBAACL,EAAD,KACGH,EAAWS,KAAI,SAAAC,GAAC,OACf,kBAACJ,EAAD,CACEK,IAAKD,EAAET,KACPW,gBAAgB,SAEhBC,MAAkB,QAAXH,EAAET,KACTa,GAAe,QAAXJ,EAAET,KAAiB,IAAnB,WAA6BS,EAAET,OAElCS,EAAER,W,ufChFb,IAAMa,EAAgBX,IAAOC,IAAV,KAqDJW,EAvBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACVC,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,IAAKC,EAAeJ,EAAfI,WACjC,OACE,kBAACN,EAAD,KACGM,GACC,yBAAKC,UAAU,aACb,uBAAGC,KAAMH,EAAKI,OAAO,QAAQC,IAAI,uBAC/B,yBAAKC,IAAKL,EAAYM,IAAI,gBAIhC,yBAAKL,UAAU,YACb,4BACE,uBAAGC,KAAMH,EAAKI,OAAO,SAASC,IAAI,uBAC/BP,IAGL,2BAAIC,M,kVC5CZ,IAAMS,EAAgBxB,IAAOC,IAAV,KA6DJwB,EAhDE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECjBpB,SAAoBC,EAAgBC,GAAM,MAEzBC,oBAAS,GAFgB,mBAEhDC,EAFgD,KAEvCC,EAFuC,OAGvBF,mBAAS,MAHc,mBAGhDG,EAHgD,KAGtCC,EAHsC,OAI7BJ,mBAAS,MAJoB,mBAIhDK,EAJgD,KAIzCC,EAJyC,KAqBvD,OAfAC,qBAAU,YACK,uCAAG,4BAAAC,EAAA,6DACdN,GAAW,GADG,kBAGWJ,IAHX,OAGNK,EAHM,OAIZC,EAAYD,GAJA,gDAMZG,EAAS,EAAD,IANI,QAQdJ,GAAW,GARG,yDAAH,qDAUbO,KAECV,GAEI,CAACE,EAASE,EAAUE,GDHQK,EAAW,WAC5C,IAAMC,EAAqB,QAAbd,EAAqB,GAArB,oBAAuCA,GACrD,OAAOe,IAAMC,IAAN,yDAC6CF,EAD7C,+CAGN,CAACd,IAN6B,mBAC1BI,EAD0B,KACjBa,EADiB,KACPT,EADO,KAyBjC,GAAGJ,EACD,OAAO,kBAACN,EAAD,mBAGT,IAAImB,EACF,OAAO,KAGT,GAAGT,EACD,OAAO,kBAACV,EAAD,mCAlCwB,IAsCzBoB,EAAaD,EAASE,KAAtBD,SACR,OACE,kBAACpB,EAAD,KACGoB,EAASvC,KAAI,SAAAQ,GAAO,OACnB,kBAAC,EAAD,CAAUN,IAAKM,EAAQG,IAAKH,QAASA,SE7C9BiC,EAZE,SAAC,GAAe,IAEzBpB,EAFwB,EAAZqB,MAEKC,OAAOtB,UAAY,MAE1C,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUA,SAAUA,M,OCHXuB,EAJH,WACV,OAAO,kBAAC,IAAD,CAAOC,KAAK,cAAcC,UAAWL,KCA9CM,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b5ccbff3.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst categories = [\r\n  {\r\n    name: 'all',\r\n    text: '전체보기'\r\n  },\r\n  {\r\n    name: 'business',\r\n    text: '비즈니스'\r\n  },\r\n  {\r\n    name: 'entertainment',\r\n    text: '엔터테인먼트'\r\n  },\r\n  {\r\n    name: 'health',\r\n    text: '건강'\r\n  },\r\n  {\r\n    name: 'science',\r\n    text: '과학'\r\n  },\r\n  {\r\n    name: 'sports',\r\n    text: '스포츠'\r\n  },\r\n  {\r\n    name: 'technology',\r\n    text: '기술'\r\n  }\r\n]\r\n\r\nconst CategoriesBlock = styled.div`\r\n  display: flex;\r\n  padding: 1rem;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n`;\r\n\r\nconst Category = styled(NavLink)`\r\n  font-size: 1.125rem;\r\n  cursor: pointer;\r\n  white-space: pre;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  padding-bottom: 0.25rem;\r\n\r\n  &:hover {\r\n    color: #495057;\r\n  }\r\n\r\n  &.active {\r\n    font-weight: 600;\r\n    border-bottom: 2px solid #22b8cf;\r\n    color: #22b8cf;\r\n    &:hover {\r\n      color: #3bc9db;\r\n    }\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst Categories = () => {\r\n  return (\r\n    <CategoriesBlock>\r\n      {categories.map(c => (\r\n        <Category \r\n          key={c.name}\r\n          activeClassName=\"active\"\r\n          // 전체보기의 경우 예외적으로 '/all' 대신 '/'로 설정\r\n          exact={c.name === 'all'}\r\n          to={c.name === 'all' ? '/' : `/${c.name}`}\r\n        >\r\n          {c.text}\r\n        </Category>\r\n      ))}\r\n    </CategoriesBlock>\r\n  );\r\n};\r\n\r\nexport default Categories;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NewsItemBlock = styled.div`\r\n  display: flex;\r\n  .thumbnail {\r\n    margin-right: 1rem;\r\n    img {\r\n      display: block;\r\n      width: 160px;\r\n      height: 100px;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n  .contents {\r\n    h2 {\r\n      margin: 0;\r\n      a {\r\n        color: black;\r\n      }\r\n    }\r\n    p {\r\n      margin: 0;\r\n      line-height: 1.5;\r\n      margin-top: 0.5rem;\r\n      white-space: normal;\r\n    }\r\n  }\r\n  & + & {\r\n    margin-top: 3rem;\r\n  }\r\n`;\r\n\r\nconst NewsItem = ({ article }) => {\r\n  const { title, description, url, urlToImage } = article;\r\n  return (\r\n    <NewsItemBlock>\r\n      {urlToImage && (\r\n        <div className=\"thumbnail\">\r\n          <a href={url} target=\"black\" rel=\"noopener noreferrer\">\r\n            <img src={urlToImage} alt=\"thumbnail\" />\r\n          </a>\r\n        </div>\r\n      )}\r\n      <div className=\"contents\">\r\n        <h2>\r\n          <a href={url} target=\"_black\" rel=\"noopener noreferrer\">\r\n            {title}\r\n          </a>\r\n        </h2>\r\n        <p>{description}</p>\r\n      </div>\r\n    </NewsItemBlock>\r\n  );\r\n};\r\n\r\nexport default NewsItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport NewsItem from './NewsItem';\r\nimport axios from 'axios';\r\nimport usePromise from '../lib/usePromise';\r\n\r\nconst NewsListBlock = styled.div`\r\n  box-sizing: border-box;\r\n  padding-bottom: 3rem;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  margin-top: 2rem;\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n  }\r\n`;\r\n\r\nconst NewsList = ({ category }) => {\r\n  const [loading, response, error] = usePromise(() => {\r\n    const query = category === 'all' ? '' : `&category=${category}`\r\n    return axios.get(\r\n      `https://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=9249616b688441e9860ffd82dbbeb607`\r\n    );\r\n  }, [category]);\r\n\r\n  // const [articles, setArticles] = useState(null);\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     setLoading(true);\r\n  //     try {\r\n  //       setArticles(response.data.articles);\r\n  //     } catch (e) {\r\n  //       console.log(e);\r\n  //     }\r\n  //     setLoading(false);\r\n  //   };\r\n  //   fetchData();\r\n  // }, [category]);\r\n\r\n  // 대기중일 때\r\n  if(loading) {\r\n    return <NewsListBlock>Loading...</NewsListBlock>\r\n  };\r\n  // 아직 articles 값이 설정되지 않았을 때\r\n  if(!response) {\r\n    return null;\r\n  }\r\n  // 에러 발생 시\r\n  if(error) {\r\n    return <NewsListBlock>에러 발생!</NewsListBlock>;\r\n  }\r\n\r\n  // response 값이 유효할 때\r\n  const { articles } = response.data;\r\n  return (\r\n    <NewsListBlock>\r\n      {articles.map(article => (\r\n        <NewsItem key={article.url} article={article} />\r\n      ))}\r\n    </NewsListBlock>\r\n  );\r\n};\r\n\r\nexport default NewsList;","import { useState, useEffect } from 'react'\r\n\r\nexport default function usePromise(promiseCreator, deps) {\r\n  // [대기중, 완료, 실패]에 대한 상태 관리\r\n  const [loading, setLoading] = useState(false);\r\n  const [resolved, setResolved] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const process = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const resolved = await promiseCreator();\r\n        setResolved(resolved);\r\n      } catch (e) {\r\n        setError(e);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    process();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, deps)\r\n\r\n  return [loading, resolved, error];\r\n}\r\n","import React from 'react';\r\nimport Categories from '../components/Categories';\r\nimport NewsList from '../components/NewsList';\r\n\r\nconst NewsPage = ({ match }) => {\r\n  // 카테고리가 선택되지 않았으면 기본값 all로 사용\r\n  const category = match.params.category || 'all';\r\n\r\n  return (\r\n    <>\r\n      <Categories />\r\n      <NewsList category={category} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsPage;","import React from 'react';\nimport NewsPage from './pages/NewsPage';\nimport { Route } from 'react-router-dom';\n\nconst App = () => {\n  return <Route path=\"/:category?\" component={NewsPage} />;\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}